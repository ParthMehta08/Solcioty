//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SolciotyNewEntities : DbContext
    {
        public SolciotyNewEntities()
            : base("name=SolciotyNewEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BoxerTemplate> BoxerTemplates { get; set; }
        public virtual DbSet<BoxerTemplateVideoMapping> BoxerTemplateVideoMappings { get; set; }
        public virtual DbSet<BoxerWorkoutCategory> BoxerWorkoutCategories { get; set; }
        public virtual DbSet<BoxerWorkoutMaster> BoxerWorkoutMasters { get; set; }
        public virtual DbSet<BoxerWorkoutSchedule> BoxerWorkoutSchedules { get; set; }
        public virtual DbSet<BoxerWorkoutTemplateMapping> BoxerWorkoutTemplateMappings { get; set; }
        public virtual DbSet<BoxerWorkoutUserMapping> BoxerWorkoutUserMappings { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<FitnessTag> FitnessTags { get; set; }
        public virtual DbSet<Gym> Gyms { get; set; }
        public virtual DbSet<GymLocationMapping> GymLocationMappings { get; set; }
        public virtual DbSet<GymUserMapping> GymUserMappings { get; set; }
        public virtual DbSet<ImageGallery> ImageGalleries { get; set; }
        public virtual DbSet<ImageTagMapping> ImageTagMappings { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<LocationSelectedBoxerWorkout> LocationSelectedBoxerWorkouts { get; set; }
        public virtual DbSet<LocationSelectedWorkout> LocationSelectedWorkouts { get; set; }
        public virtual DbSet<MailLog> MailLogs { get; set; }
        public virtual DbSet<MailTemplate> MailTemplates { get; set; }
        public virtual DbSet<Permission> Permissions { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<RolePermissionMapping> RolePermissionMappings { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<Template> Templates { get; set; }
        public virtual DbSet<TemplateVideoMapping> TemplateVideoMappings { get; set; }
        public virtual DbSet<TrainingPortal> TrainingPortals { get; set; }
        public virtual DbSet<TrainingPortalCategory> TrainingPortalCategories { get; set; }
        public virtual DbSet<TrainingPortalSubCategory> TrainingPortalSubCategories { get; set; }
        public virtual DbSet<TrainingPortalSubCategoryVideo> TrainingPortalSubCategoryVideos { get; set; }
        public virtual DbSet<TrainingPortalUserMapping> TrainingPortalUserMappings { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserLocationMapping> UserLocationMappings { get; set; }
        public virtual DbSet<UserRoleMapping> UserRoleMappings { get; set; }
        public virtual DbSet<Video> Videos { get; set; }
        public virtual DbSet<VideoTagMapping> VideoTagMappings { get; set; }
        public virtual DbSet<WorkoutCategory> WorkoutCategories { get; set; }
        public virtual DbSet<WorkoutMaster> WorkoutMasters { get; set; }
        public virtual DbSet<WorkoutSchedule> WorkoutSchedules { get; set; }
        public virtual DbSet<WorkoutTemplateMapping> WorkoutTemplateMappings { get; set; }
        public virtual DbSet<WorkoutUserMapping> WorkoutUserMappings { get; set; }
    
        public virtual ObjectResult<SP_Proc_Copy_Videos_Result> SP_Proc_Copy_Videos(Nullable<int> p_SourceUser, Nullable<int> p_DestinationUser)
        {
            var p_SourceUserParameter = p_SourceUser.HasValue ?
                new ObjectParameter("P_SourceUser", p_SourceUser) :
                new ObjectParameter("P_SourceUser", typeof(int));
    
            var p_DestinationUserParameter = p_DestinationUser.HasValue ?
                new ObjectParameter("P_DestinationUser", p_DestinationUser) :
                new ObjectParameter("P_DestinationUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Proc_Copy_Videos_Result>("SP_Proc_Copy_Videos", p_SourceUserParameter, p_DestinationUserParameter);
        }
    
        public virtual ObjectResult<SP_proc_copy_site_Result> SP_proc_copy_site(Nullable<int> p_From_Gym_Id, string p_ClientName, string p_FirstName, string p_LastName, string p_EmailId, string p_UserName, string p_CopyAction, string p_PasswordSaltKey, string p_NewPassword)
        {
            var p_From_Gym_IdParameter = p_From_Gym_Id.HasValue ?
                new ObjectParameter("P_From_Gym_Id", p_From_Gym_Id) :
                new ObjectParameter("P_From_Gym_Id", typeof(int));
    
            var p_ClientNameParameter = p_ClientName != null ?
                new ObjectParameter("P_ClientName", p_ClientName) :
                new ObjectParameter("P_ClientName", typeof(string));
    
            var p_FirstNameParameter = p_FirstName != null ?
                new ObjectParameter("P_FirstName", p_FirstName) :
                new ObjectParameter("P_FirstName", typeof(string));
    
            var p_LastNameParameter = p_LastName != null ?
                new ObjectParameter("P_LastName", p_LastName) :
                new ObjectParameter("P_LastName", typeof(string));
    
            var p_EmailIdParameter = p_EmailId != null ?
                new ObjectParameter("P_EmailId", p_EmailId) :
                new ObjectParameter("P_EmailId", typeof(string));
    
            var p_UserNameParameter = p_UserName != null ?
                new ObjectParameter("P_UserName", p_UserName) :
                new ObjectParameter("P_UserName", typeof(string));
    
            var p_CopyActionParameter = p_CopyAction != null ?
                new ObjectParameter("P_CopyAction", p_CopyAction) :
                new ObjectParameter("P_CopyAction", typeof(string));
    
            var p_PasswordSaltKeyParameter = p_PasswordSaltKey != null ?
                new ObjectParameter("P_PasswordSaltKey", p_PasswordSaltKey) :
                new ObjectParameter("P_PasswordSaltKey", typeof(string));
    
            var p_NewPasswordParameter = p_NewPassword != null ?
                new ObjectParameter("P_NewPassword", p_NewPassword) :
                new ObjectParameter("P_NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_proc_copy_site_Result>("SP_proc_copy_site", p_From_Gym_IdParameter, p_ClientNameParameter, p_FirstNameParameter, p_LastNameParameter, p_EmailIdParameter, p_UserNameParameter, p_CopyActionParameter, p_PasswordSaltKeyParameter, p_NewPasswordParameter);
        }
    
        [DbFunction("SolciotyNewEntities", "fn_split_string_to_column")]
        public virtual IQueryable<fn_split_string_to_column_Result> fn_split_string_to_column(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_split_string_to_column_Result>("[SolciotyNewEntities].[fn_split_string_to_column](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    }
}
