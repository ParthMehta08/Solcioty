@using System.Web.Optimization;
@using Models
@using Solcioty.utilities;
@{

    Layout = null;
}
@model ModelBoxerHomePage
@{
    var lastIndex = Model.BoxerWorkoutInfo.BoxerTemplates != null ? Model.BoxerWorkoutInfo.BoxerTemplates.Count + 1 : 1;
    var isFutureWorkout = Model.BoxerWorkoutInfo != null && Model.BoxerWorkoutInfo.IsFutureWorkout ? Model.BoxerWorkoutInfo.IsFutureWorkout : false;

    
    double seconds = TimeSpan.Parse(Model.BoxerWorkoutInfo.BoxerTemplates[1].TimeText).TotalSeconds;


}

<doctype html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Workout</title>
        <link rel="stylesheet" href="~/Content/assets/css/BoxerCss/style.css">
        <link rel="stylesheet" href="https://use.typekit.net/rjm5wct.css">
        <!-- Owl Stylesheets -->
        <link rel="stylesheet" href="~/Content/assets/css/BoxerCss/owl.carousel.css">
        <link rel="stylesheet" href="~/Content/assets/css/BoxerCss/owl.theme.default.css">

        <!-- javascript -->
        <script src="~/Content/assets/js/Boxerjs/jquery.min.js"></script>
        <script src="~/Content/assets/js/Boxerjs/owl.carousel.js"></script>
    </head>
    <body>
        <div id="wrapper">
            <header class="header">
                <div class="logo">
                    <img src="~/Content/assets/images/Boxertemplate/logo.png" />
                </div>
                <div class="header-center-title">
                    @Model.BoxerWorkoutInfo.BoxerWorkoutName
                </div>

                <div role="progressbar" aria-valuenow="65" aria-valuemin="0" aria-valuemax="100" style="--value:50">

                    <div class="header-right-timmer">
                        <span>Time</span>
                        <h2 id="app"></h2>
                        <span>REMAINING</span>
                    </div>

                </div>


            </header>
            <div class="middle-section">
                <div class="owl-carousel owl-theme">
                    @foreach (var items in Model.BoxerWorkoutInfo.BoxerTemplates)
                    {
                        var clssname = "two-by-four";
                        int numberofbasicvideos = 0;
                        int numberofalternatevideo = 0;
                        

                        if (items.NumberOfBasicVideos == 1 && items.NumberOfAlternateVideos == 1)
                        {
                            //("1 X 1");
                            clssname = "one-by-one";
                            numberofbasicvideos = 1;
                            numberofalternatevideo = 1;
                        }
                        else if (items.NumberOfBasicVideos == 1 && items.NumberOfAlternateVideos == 2)
                        {
                            //("1 X 2");
                            clssname = "two-by-one";
                            numberofbasicvideos = 1;
                            numberofalternatevideo = 1;
                        }
                        else if (items.NumberOfBasicVideos == 2 && items.NumberOfAlternateVideos == 1)
                        {
                            //("1 X 2");
                            clssname = "one-by-two";
                            numberofbasicvideos = 2;
                            numberofalternatevideo = 0;
                        }
                        else if (items.NumberOfBasicVideos == 2 && items.NumberOfAlternateVideos == 2)
                        {
                            //("2 X 2");
                            clssname = "two-by-two";
                            numberofbasicvideos = 2;
                            numberofalternatevideo = 2;
                        }
                        else if (items.NumberOfBasicVideos == 3 && items.NumberOfAlternateVideos == 1)
                        {
                            //("3 X 1");
                            clssname = "one-by-three";
                            numberofbasicvideos = 3;
                            numberofalternatevideo = 0;
                        }
                        else if (items.NumberOfBasicVideos == 3 && items.NumberOfAlternateVideos == 3)
                        {
                            //("3 X 2");
                            clssname = "two-by-three";
                            numberofbasicvideos = 3;
                            numberofalternatevideo = 3;
                        }
                        else if (items.NumberOfBasicVideos == 4 && items.NumberOfAlternateVideos == 1)
                        {
                            //("4 X 1");
                            clssname = "one-by-four";
                            numberofbasicvideos = 4;
                            numberofalternatevideo = 0;
                        }
                        else if (items.NumberOfBasicVideos == 4 && items.NumberOfAlternateVideos == 4)
                        {
                            //("4 X 2");
                            clssname = "two-by-four";
                            numberofbasicvideos = 4;
                            numberofalternatevideo = 4;
                        }
                        else if (items.NumberOfBasicVideos == 5 && items.NumberOfAlternateVideos == 1)
                        {
                            //("5 X 1");
                            clssname = "one-by-five";
                            numberofbasicvideos = 5;
                            numberofalternatevideo = 0;
                        }
                        else if (items.NumberOfBasicVideos == 5 && items.NumberOfAlternateVideos == 5)
                        {
                            //("5 X 2");
                            clssname = "two-by-five";
                            numberofbasicvideos = 5;
                            numberofalternatevideo = 5;
                        }
                        else if (items.NumberOfBasicVideos == 6 && items.NumberOfAlternateVideos == 1)
                        {
                            //("6 X 1");
                            clssname = "one-by-six";
                            numberofbasicvideos = 6;
                            numberofalternatevideo = 0;
                        }
                        else if (items.NumberOfBasicVideos == 6 && items.NumberOfAlternateVideos == 6)
                        {
                            //("6 X 6");
                            clssname = "two-by-six";
                            numberofbasicvideos = 6;
                            numberofalternatevideo = 6;
                        }
                        else if (items.NumberOfBasicVideos == 7 && items.NumberOfAlternateVideos == 1)
                        {
                            //("7 X 1");
                            clssname = "one-by-seven";
                            numberofbasicvideos = 7;
                            numberofalternatevideo = 0;
                        }
                        else if (items.NumberOfBasicVideos == 7 && items.NumberOfAlternateVideos == 7)
                        {
                            //("7 X 7");
                            clssname = "two-by-seven";
                            numberofbasicvideos = 7;
                            numberofalternatevideo = 7;
                        }
                        else if (items.NumberOfBasicVideos == 8 && items.NumberOfAlternateVideos == 1)
                        {
                            //("8 X 1");
                            clssname = "one-by-eight";
                            numberofbasicvideos = 8;
                            numberofalternatevideo = 0;
                        }
                        else if (items.NumberOfBasicVideos == 8 && items.NumberOfAlternateVideos == 8)
                        {
                            //("8 X 8");
                            clssname = "two-by-eight";
                            numberofbasicvideos = 8;
                            numberofalternatevideo = 8;
                        }
                        else if (items.NumberOfBasicVideos == 9 && items.NumberOfAlternateVideos == 1)
                        {
                            //("9 X 1");
                            clssname = "one-by-nine";
                            numberofbasicvideos = 9;
                            numberofalternatevideo = 0;
                        }
                        else if (items.NumberOfBasicVideos == 9 && items.NumberOfAlternateVideos == 9)
                        {
                            //("9 X 9");
                            clssname = "two-by-nine";
                            numberofbasicvideos = 9;
                            numberofalternatevideo = 9;
                        }
                        else if (items.NumberOfBasicVideos == 10 && items.NumberOfAlternateVideos == 1)
                        {
                            //("10 X 1");
                            clssname = "one-by-ten";
                            numberofbasicvideos = 10;
                            numberofalternatevideo = 0;
                        }
                        else if (items.NumberOfBasicVideos == 10 && items.NumberOfAlternateVideos == 10)
                        {
                            //("10 X 10");
                            clssname = "";
                            numberofbasicvideos = 10;
                            numberofalternatevideo = 10;
                        }





                    <div>
                        @if (items.NumberOfAlternateVideos != 1)
                        {

                            <div class="ten-col-section top-section @clssname">
                                @foreach (var item in items.BasicVideos.Take(numberofbasicvideos))
                                {
                                    if (item.FileType == "I")
                                    {
                                        <div class="col">
                                            <div class="img-col">
                                                @*<img src="images/karolis-milisauskas-eoVdk1z4ihI-unsplash.jpg" />*@
                                                <img src="~/AllImages/@item.VideoId/@item.VideoFile" /> }
                                            </div>

                                        </div>
                                    }
                                    else if (item.FileType == "V")
                                    {
                                        <div class="col">
                                            <div class="img-col">
                                                <video controls autoplay>

                                                    <source src="@Url.Content($"/AllVideos/{@item.VideoId}/{@item.VideoFile}")" type="video/mp4">

                                                </video>
                                            </div>

                                        </div>
                                    }


                                }

                            </div>


                            <div class="ten-col-section bottom-section @clssname">
                                @foreach (var item in items.AlternateVideos.Take(numberofalternatevideo))
                                {
                                    if (item.FileType == "I")
                                    {
                                        <div class="col">
                                            <div class="img-col">
                                                @*<img src="images/karolis-milisauskas-eoVdk1z4ihI-unsplash.jpg" />*@
                                                <img src="~/AllImages/@item.VideoId/@item.VideoFile" /> }
                                            </div>

                                        </div>
                                    }
                                    else if (item.FileType == "V")
                                    {
                                        <div class="col">
                                            <div class="img-col">
                                                <video controls autoplay>
                                                    <source src="@Url.Content($"/AllVideos/{@item.VideoId}/{@item.VideoFile}")" type="video/mp4">
                                                </video>
                                            </div>
                                        </div>
                                    }

                                }
                            </div>
                        }
                        else
                        {
                            <div class="ten-col-section  @clssname">
                                @foreach (var item in items.BasicVideos.Take(numberofbasicvideos))
                                {
                                    if (item.FileType == "I")
                                    {
                                        <div class="col">
                                            <div class="img-col">
                                                @*<img src="images/karolis-milisauskas-eoVdk1z4ihI-unsplash.jpg" />*@
                                                <img src="~/AllImages/@item.VideoId/@item.VideoFile" /> }
                                            </div>

                                        </div>
                                    }
                                    else if (item.FileType == "V")
                                    {
                                        <div class="col">
                                            <div class="img-col">
                                                <video controls autoplay>

                                                    <source src="@Url.Content($"/AllVideos/{@item.VideoId}/{@item.VideoFile}")" type="video/mp4">

                                                </video>
                                            </div>

                                        </div>
                                    }


                                }

                            </div>

                        }
                    </div>
                    }
                </div>
            </div>
        </div>

        <script>
            $(document).ready(function () {
                var owl = $('.owl-carousel');
                owl.owlCarousel({
                    margin: 10,
                    nav: true,
                    loop: false,
                    responsive: {
                        0: {
                            items: 1
                        },
                        600: {
                            items: 1
                        },
                        1000: {
                            items: 1
                        }
                    }
                })
            })





            //timer with start stop
      ;(function () {

  // Opt into strict mode
  'use strict';


  //
  // Variables
  //

  // The timer duration
    const duration = @seconds;

  // The timer component
  let app;

  // The timer interval
  let timer;


  //
  // Functions
  //

  /**
   * Class representing a state-based component
   */
  class Rue {
   
    constructor (selector, options) {
      this.elem = document.querySelector(selector);
      this.data = options.data;
      this.template = options.template;
    }

    /**
     * Render the component
     */
    render () {
      this.elem.innerHTML = this.template(this.data);
    }
  }

  
  function getData () {
    return {
      time: duration,
      paused: true
    };
  }

 
  function format (time) {
    // Get the minutes and seconds
    const minutes = Math.floor(time / 60).toString();
    const seconds = (time % 60).toString();

    // Return the time in M:SS format
    return minutes + ':' + seconds.padStart(2, '0');
  }

  
  function template (props) {
    // Get the paused state
    const pausedState = props.paused ? 'Start' : 'Pause';

    // If the timer is done, show a reset button
    if (props.time < 1) {
      return `
        <p>
          00:00
        </p>
       
      `;
    }

    // Otherwise, show the time remaining
    return `
      <p id="${pausedState.toLowerCase()}" style= "cursor: pointer;">
        ${format(props.time)}
      </p>
      
    `;
  }

  
  function countdown () {
    // Decrease the time remaining
    app.data.time--;

    // If the timer is done, stop it
    if (app.data.time < 1) {
      clearInterval(timer);
    }

    // Render the new state
    app.render();
  }

  
  function start () {
    // Set the paused state
    app.data.paused = false;

    // Re-render the timer
    app.render();

    // Start the countdown
    timer = setInterval(countdown, 1000);
  }

  
  function pause () {
    // Set the paused state
    app.data.paused = true;

    // Re-render the timer
    app.render();

    // Stop the countdown
    clearInterval(timer);
  }

  /**
   * Reset the timer
   */
  //function reset () {
  //  // Reset the state
  //  app.data = getData();

  //  // Re-render the timer
  //  app.render();

  //  // Stop the countdown
  //  clearInterval(timer);
  //}

  
  function handleClick (event) {
    switch (event.target.id) {
      case 'start':
        start();
        break;
      case 'pause':
        pause();
        break;
      //case 'reset':
      //  reset();
    }
  }


  //
  // Inits & Event Listeners
  //

  // Set up the timer component
  app = new Rue('#app', {
    data: getData(),
    template: template
  });

  // Run an initial render
  app.render();

  // Handle click events
  app.elem.addEventListener('click', handleClick);

}) ();

            //end

        </script>
    </body>

</html>
