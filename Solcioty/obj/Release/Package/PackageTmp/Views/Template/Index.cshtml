@using System.Web.Optimization;
@using Models;
@using Services;
@model ModelTemplate
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Blocks";
    int Rows = 0;

}
@section beforeappcss{
    <!-- DataTables css -->
    @Styles.Render("~/bundle/responsivedatatablecss")
}

@{
    var userData = Session["UserData"] as UserData;
    var permissionType = AccessbilityService.GetPermission(userData.RoleCode, Permission.Templates);
}
<style>
    .deleteall {
        color: #5c4fab;
        font-weight: bold;
    }
    #datatable-buttons_paginate {
        margin-top: 80px;
    }
    #datatable-buttons_info {
        margin-top: 55px;
    }
    .del-all {
        margin-top: -105px;
        float: left;
    }
</style>
<div class="container">
    <div class="row">
        <div class="col-xs-12">
            <div class="page-title-box">
                <h4 class="page-title">Blocks </h4>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="card-box table-responsive">
                @if (permissionType == Models.Enums.PermissionType.ReadWrite)
                {

                    <a href="~/Template/Add" class="btn btn-purple waves-effect waves-light pull-right m-0">Add New</a>
                }
                <table id="datatable-buttons" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th><input type="checkbox" class="selectallblock" /></th>
                            <th>Name</th>
                            <th>Type</th>
                            @if (userData.RoleCode == RoleTypes.SuperAdmin)
                            {

                                <th>Client</th>
                            }
                            @if (permissionType == Models.Enums.PermissionType.ReadWrite)
                            {
                                <th style="width:30%;">Action</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ModelTemplateList)
                        {
                            <tr>
                                <td><input type="checkbox" data-id="@item.ID" class="selectblock" /></td>
                                <td>@item.TemplateName</td>
                                <td>
                                    @if (item.NumberOfBasicVideos == 1 && item.NumberOfAlterVideos == 1)
                                    {
                                        @("Single");
                                    }
                                    else if (item.NumberOfBasicVideos == 1 && item.NumberOfAlterVideos == 2)
                                    {
                                        @("1 X 2");
                                    }
                                    else if (item.NumberOfBasicVideos == 2 && item.NumberOfAlterVideos == 1)
                                    {
                                        @("2 X 1");
                                    }
                                    else if (item.NumberOfBasicVideos == 2 && item.NumberOfAlterVideos == 2)
                                    {
                                        @("2 X 2");
                                    }
                                    else if (item.NumberOfBasicVideos == 3 && item.NumberOfAlterVideos == 1)
                                    {
                                        @("3 X 1");
                                    }
                                    else if (item.NumberOfBasicVideos == 3 && item.NumberOfAlterVideos == 3)
                                    {
                                        @("3 X 2");
                                    }
                                    else if (item.NumberOfBasicVideos == 4 && item.NumberOfAlterVideos == 1)
                                    {
                                        @("4 X 1");
                                    }
                                    else if (item.NumberOfBasicVideos == 4 && item.NumberOfAlterVideos == 4)
                                    {
                                        @("4 X 2");
                                    }
                                    else if (item.NumberOfBasicVideos == 5 && item.NumberOfAlterVideos == 1)
                                    {
                                        @("5 X 1");
                                    }
                                    else if (item.NumberOfBasicVideos == 5 && item.NumberOfAlterVideos == 5)
                                    {
                                        @("5 X 2");
                                    }
                                </td>
                                @if (userData.RoleCode == RoleTypes.SuperAdmin)
                                {

                                    <td>@item.ClientName</td>
                                }
                                @if (permissionType == Models.Enums.PermissionType.ReadWrite)
                                {

                                    <td>
                                        <a href="~/Template/Edit/@item.ID" class="btn editicon waves-effect waves-light">Edit</a>
                                        <a class="btn deleteicon waves-effect waves-light" onclick="deleteRow(this,@item.ID);">Delete</a>
                                        <a href="~/Template/Videos/@item.ID" class="btn manageicon waves-effect waves-light">Videos</a>
                                    </td>
                                }

                            </tr>
                        }
                    </tbody>

                </table>
                @if (permissionType == Models.Enums.PermissionType.ReadWrite)
                {
                    <div class="del-all">
                        <span class="waves-effect waves-light pull-left m-0 deleteall">Delete</span>

                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section beforeappjs
{
    @Scripts.Render("~/bundle/responsivedatatablejs");
}
@section footerscript
{

    <script type="text/javascript">

        var retrieveAllTemplates = function () {
              $.ajax({
                type: "GET",
                url: "/template/getalltemplate", // Location of the service
                contentType: "application/json", // content type sent to server
                success: function (data, success) {
                    if (data.data != null && data.data.ModelTemplateList.length>0) {
                        var htmlString = '';
                        $.each(data.data.ModelTemplateList, function (index, template) {
                            htmlString += '<tr>';

                            htmlString += '<td>' + template.TemplateName + '</td>';
                            if (template.NumberOfBasicVideos == 1 && template.NumberOfAlterVideos == 1)
                             {
                              htmlString += '<td>Single</td>';
                             }
                             else
                             {
                                 htmlString += '<td>' + template.NumberOfBasicVideos + ' X ' + template.NumberOfAlterVideos+'</td>';
                            }
                            htmlString += '<td>' + template.ClientName + '</td>';
                            htmlString += "<td> <a href='/Template/Edit/" + template.ID + " ' class='btn editicon waves-effect waves-light' >Edit</a>";
                            htmlString += "<a href='#' class='btn deleteicon waves-effect waves-light' onclick='deleteRow(this," + template.ID +")';>Delete</a>";
                            htmlString += "<a href='/Template/Videos/" + template.ID + " ' class='btn manageicon waves-effect waves-light' >Videos</a></td></tr>";
                        });

                        $('#datatable-buttons tbody').html(htmlString);
                        TableManageButtons.init();
                        $(".dt-buttons").css("display", "none");

                    } else {
                         if (data.IsAuthorized != null && data.IsAuthorized == false) {
                            window.location.href = "@Url.Action("Unauthorized", "Account")"
                        }
                    }
                }
            });
        }

        $(document).ready(function () {
            $(".dt-buttons").css("display", "none");
           // retrieveAllTemplates();
            $('.selectallblock').change(function () {
                if ($(this).prop('checked') == true)
                    $('.selectblock').prop('checked', true);
                else
                    $('.selectblock').prop('checked', false);
            });
            $('.deleteall').click(function () {
                var Ids = [];
                if ($('.selectblock:checked').length == 0) {
                    toastr.error("please select at lease one record to delete");
                    return;
                } else {
                    var ids = '';
                    $.each($('.selectblock:checked'), function (i, element) {
                        Ids.push($(element).attr('data-id'));
                        //ids = ids + "," + $(element).attr('data-id');
                    });
                    deleteBulkBlock(Ids);
                    // console.log(ids);
                }
            });
        });
        TableManageButtons.init();

        function deleteRow(r, id) {
            var result = confirm("Are you sure want to delete?");
            if (result) {
                 $.ajax({
                type: "GET",
                url: "/template/Delete", // Location of the service
                data: { ID: id }, //Data sent to server
                contentType: "application/json", // content type sent to server
                success: function (data, success) {
                    if (data == true) {
                        var i = r.parentNode.parentNode.rowIndex;
                        document.getElementById("datatable-buttons").deleteRow(i);
                        //document.getElementById("datatable-buttons").row($(r).parents('tr'))
                        //    .remove()
                        //    .draw();
                       // TableManageButtons.init();
                        //$("#datatable-buttons").DataTable().destroy().draw();
                        window.location.reload();
                    } else {
                         if (data.IsAuthorized != null && data.IsAuthorized == false) {
                            window.location.href = "@Url.Action("Unauthorized", "Account")"
                        }
                    }
                }
            });
            }

        }
        function readyforlocation(id) {
            var flag = 'false';
            var currentflag = $.trim($('.readyflag_' + id).html());
            if (currentflag == "Yes") {
                flag = true;
            }
            else {
                flag = false;
            }
            $.ajax({
                type: "GET",
                url: "/template/Ready", // Location of the service
                data: { ID: id, Ready: flag }, //Data sent to server
                contentType: "application/json", // content type sent to server
                success: function (data, success) {
                    if (data == true) {
                        $('.readyflag_' + id).html('Yes');
                    }
                    else {
                        $('.readyflag_' + id).html('No');
                    }
                }
            });
        }

         var deleteBulkBlock = function(blockIds){
            var result = confirm("Are you sure want to delete?");
            if (result) {
                $.ajax({
                type: "post",
                    url: "/template/BulkDelete", // Location of the service
                    data: JSON.stringify({ "Ids": blockIds }), //Data sent to server
                contentType: "application/json", // content type sent to server
                success: function (data, success) {
                    if (data.status == true) {
                        toastr.success(data.message);

                        //var i = r.parentNode.parentNode.rowIndex;
                        //document.getElementById("datatable-buttons").deleteRow(i).draw();;
                        window.location.reload();
                    } else {
                        toastr.error(data.message);
                        if (data.IsAuthorized != null && data.IsAuthorized == false) {
                            window.location.href = "@Url.Action("Unauthorized", "Account")"
                        }
                    }
                }
            });
            }

        }
    </script>

    @if (TempData["OperationType"] == "success")
    {
        <script type="text/javascript">
        toastr.success("@TempData["OperationMessage"].ToString()")
        </script>
    }
    @if (TempData["OperationType"] == "fail")
    {
        <script type="text/javascript">
            toastr.error("@TempData["OperationMessage"].ToString()")
        </script>
    }
}


