@using System.Web.Optimization;
@using Models;
@using Services;
@model List<ModelRole>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Roles";
    int Rows = 0;

}

@{
    var userData = Session["UserData"] as UserData;
    var permissionType = AccessbilityService.GetPermission(userData.RoleCode, Permission.Roles);
}
@section beforeappcss{
    <!-- DataTables css -->
    @Styles.Render("~/bundle/responsivedatatablecss")
}

<div class="container">
    <div class="row">
        <div class="col-xs-12">
            <div class="page-title-box">
                <h4 class="page-title">Roles</h4>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>

    <div class="row">

        <div class="col-sm-12">
            <div class="card-box table-responsive">
                <table id="datatable-buttons" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>#</th>
                            @*<th>UDC</th>*@
                            <th>Display Name</th>
                            @if (permissionType == Models.Enums.PermissionType.ReadWrite)
                            {
                                <th width="30%">Action</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            {
                                if (item.UDC != RoleTypes.SuperAdmin && item.UDC != RoleTypes.BranchInstructor && item.UDC != RoleTypes.Client)
                                {
                                    if ((userData.RoleCode == RoleTypes.ClientAdmin && item.UDC == RoleTypes.ClientAdmin) || (userData.RoleCode == RoleTypes.SuperAdmin && item.UDC == RoleTypes.BranchAdmin))
                                    {
                                        continue;
                                    }
                                    Rows++;
                                    <tr>
                                        <td>@Rows</td>
                                        @*<td>@item.UDC</td>*@
                                        <td>
                                            @item.DisplayName
                                        </td>
                                        @if (permissionType == Models.Enums.PermissionType.ReadWrite)
                                        {
                                            <td>
                                                @{
                                                    var statusText = @item.IsActive ? "Deactivate" : "Activate";
                                                }
                                                <a class="btn btn-purple waves-effect waves-light" onclick="UpdateRoleStatus(this,@item.Id,!@item.IsActive.ToString().ToLower());">@statusText</a>
                                                @if (item.UDC != RoleTypes.BranchInstructor && item.UDC != RoleTypes.Client)
                                                {
                                                    <a href="@Url.Action("RolePermissions","User",new { RoleCode =item.UDC })" class="btn manageicon waves-effect waves-light">Permissions</a>
                                                }

                                            </td>
                                        }

                                    </tr>
                                }

                            }
                        }

                    </tbody>

                </table>
            </div>
        </div>
    </div>
</div>
@section beforeappjs
{
    @Scripts.Render("~/bundle/responsivedatatablejs");
}
@section footerscript
{

    <script type="text/javascript">

        $(document).ready(function () {
            $(".dt-buttons").css("display", "none");
        });
        TableManageButtons.init();

        function UpdateRoleStatus(r, id, status) {
            $.ajax({
                type: "GET",
                url: "/user/updaterolestatus", // Location of the service
                data: { roleId: id, status: status }, //Data sent to server
                contentType: "application/json", // content type sent to server
                success: function (data) {
                    if (data.IsSuccess == true) {
                       // toastr.success("Role activation status changed!");
                        window.location.reload();
                    } else {
                         if (data.IsAuthorized != null && data.IsAuthorized == false) {
                            window.location.href = "@Url.Action("Unauthorized", "Account")"
                        }
                        toastr.error("Something went wrong!");
                    }
                }
            });
        }

    </script>
    @if (TempData["OperationType"] == "success")
    {
        <script type="text/javascript">
        toastr.success("@TempData["OperationMessage"].ToString()")
        </script>
    }
    @if (TempData["OperationType"] == "fail")
    {
        <script type="text/javascript">
            toastr.error("@TempData["OperationMessage"].ToString()")
        </script>
    }
}




