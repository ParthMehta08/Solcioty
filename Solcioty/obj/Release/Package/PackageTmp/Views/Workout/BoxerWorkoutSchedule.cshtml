@using Services;
@using Models;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Workout Schedule";

}
@{
    var userData = Session["UserData"] as UserData;
    var permissionType = AccessbilityService.GetPermission(userData.RoleCode, Permission.Workouts_Schedule);
}
@*<link href="~/Content/assets/css/bootstrap.css" rel="stylesheet" type="text/css">
    <link href="~/Content/assets/css/style.css" rel="stylesheet" />*@
<link href="~/Content/assets/css/style2.css?v=@(DateTime.Now.Ticks)" rel="stylesheet" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css" />

<!-- qTip -->
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/qtip2/3.0.3/jquery.qtip.min.css" />

<!-- Full Calendar -->
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/2.9.1/fullcalendar.min.css" />
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/2.9.1/fullcalendar.print.css" media="print" />

<style type="text/css">
    .modal-content .carousel-inner > .active, .modal-content .carousel-inner > .next, .modal-content .carousel-inner > .prev {
        display: inline-block;
    }

    .modal-content .Line1 {
        position: relative;
        float: left;
        width: 100%;
    }

    .card-box {
        border: none;
        background-color: transparent;
    }

    .modal-content .sidebar1 h3 {
        font-size: 11px;
        font-weight: bold;
        text-align: center;
        vertical-align: middle;
        position: absolute;
        left: 0;
        right: 0;
        margin-left: auto;
        margin-right: auto;
        top: 50%;
        margin-top: -50px;
    }

    .reps {
        position: absolute;
        left: 0;
        bottom: 0;
    }

    .video1 video {
        height: 54%;
    }

    .video2 video {
        height: 27%;
    }

    .video3 video {
        height: 27%;
    }

    .workoutarea .item {
        width: 100%;
    }

    .video4 video {
        height: 26%;
    }

    .video5 video {
        height: 27%;
    }

    @@media (max-width: 5000px) and (min-width: 2561px) {
        .video1 video {
            height: 80%;
        }

        .video5 video, .video4 video, .video3 video, .video2 video {
            height: 80%;
        }
    }

    @@media (min-width: 1920px) and (max-width: 2560px) {
        .video1 video {
            height: 80%;
        }

        .video2 video, .video3 video, .video4 video, .video5 video {
            height: 50%;
        }
    }
</style>
@if (permissionType == Models.Enums.PermissionType.ReadWrite && userData.RoleCode == RoleTypes.ClientAdmin)
{
    <div class="col-sm-12">

        <div class="container">
            <div class="row">
                @*@Html.DropDownListFor(m => m.WorkoutId,
        new SelectList(Model.WorkoutList, "ID", "WorkoutName"), new { @class = "form-control workoutlist" }*@
                <div class="col-md-2">
                    <label class="h4">Select Location</label>
                </div>
                <div class="col-md-3">
                    <select class="form-control" id="locations"></select>
                </div>
                <div class="col-md-2" id="scheduleworkout">
                    <a href="javascript:void(0);" onclick="ScheduleWorkout(0)" class="btn btn-purple waves-effect waves-light pull-right m-0">Schedule Workout</a>

                </div>
                <div class="col-md-2" id="bulkscheduleworkout">
                    <a href="javascript:void(0);" onclick="BulkScheduleWorkout(0)" class="btn btn-purple waves-effect waves-light pull-left m-0">Bulk Schedule Workout</a>

                </div>


            </div>
            <div class="col-sm-12 p-0">

                <div class="card-box table-responsive">

                    <div id="calendar"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="workoutscheduletable" style="z-index: 9999;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    Workout Schedule
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="display:inline-table;">
                    <div class="col-sm-12">
                        <div class="card-box table-responsive workoutschedulearea">
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>

     <div class="modal fade" id="workoutbulkscheduletable" style="z-index: 9999;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    Workout Bulk Schedule
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="display:inline-table;">
                    <div class="col-sm-12">
                        <div class="card-box table-responsive workoutbulkschedulearea">
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>

    <div class="modal fade" id="workoutdetailtable" style="z-index: 9999; overflow: inherit;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" style="width:90% !important; height:100%;" role="document">
            <div class="modal-content" style="height: 100%;">
                <div class="modal-header">
                    Workout Detail
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="display:inline-table;width:100% !important; height:100%;">
                    <div class="col-sm-12" style="height: 100%;">
                        <div class="card-box table-responsive workoutarea" style="height: 100%;">
                            <div class="workoutareabody Fullscreen"></div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>


    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>*@
    <script src="~/Content/assets/js/jquery.min.js"></script>
    <script src="~/Content/assets/js/bootstrap.min.js"></script>
}
@section footerscript
{

    <script type="text/javascript">
           var ViewWorkout = function (workoutId) {
                $.ajax({
                type: "get",
                url: "@Url.Action("ViewBoxerWorkout", "Workout")", // Location of the service
                data: { WorkoutId: workoutId }, //Data sent to server
                dataType: 'html',
                success: function (data) {
                    $('.workoutareabody').html(data);

                    $($('.item')[0]).addClass('active');

                    $('.carousel-indicators').hide();
                    $('#workoutdetailtable').modal();
                }
                });
            }
        var GetClientLocations = function () {
             $.ajax({
                url: '@Url.Action("GetAllBranchByClient", "Gym")',
                type: "get",
                dataType: "JSON",
                contentType: "application/json",
                 success: function (result) {
                     if (result.Locations != null && result.Locations.length > 0) {
                         var htmlString = '';
                         $.each(result.Locations, function (index, location) {
                             htmlString += "<option label='" + location.LocationName + "' value='" + location.ID + "'>"+ location.LocationName +"</option>";
                         });

                         $('#locations').html(htmlString);

                         $('#scheduleworkout a').css('pointer-events', '');
                         $('#locations').change(function () {
                             var locationId = $(this).val();
                             $('#calendar').fullCalendar('destroy');
                             $('#calendar').fullCalendar({
                                 header:
                                     {
                                         left: 'prev,next today',
                                         center: 'title',
                                         right: 'month,agendaWeek,agendaDay'
                                     },
                                 buttonText: {
                                     today: 'today',
                                     month: 'month',
                                     week: 'week',
                                     day: 'day'
                                 },

                                 events: function (start, end, timezone, callback) {
                                     $.ajax({
                                         url: '/Workout/GetScheduledBoxerWorkout',
                                         type: "GET",
                                         dataType: "JSON",
                                         data: { LocationId: locationId },
                                         success: function (result) {
                                             var events = [];
                                             if (result.data.length > 0) {
                                                 $.each(result.data, function (i, data) {
                                                     events.push(
                                                         {
                                                             title: data.WorkoutName,
                                                             description: data.WorkoutName,
                                                             //start: moment(data.ScheduledDate).format('YYYY-MM-DD'),
                                                             //end: moment(data.ScheduledDate).format('YYYY-MM-DD'),
                                                             start: moment(data.DisplayDate).format('YYYY-MM-DD'),
                                                             end: moment(data.DisplayDate).format('YYYY-MM-DD'),
                                                             backgroundColor: data.IsActive == true ? "#98f" : "#ddd",
                                                             borderColor: "#000",
                                                             id: data.WorkoutScheduleId,
                                                             isActive: data.IsActive,
                                                             workoutId: data.WorkoutId

                                                         });
                                                 });
                                             }


                                             callback(events);
                                         }
                                     });
                                 },

                                 eventRender: function (event, element) {
                                     element.qtip(
                                         {
                                             content: event.description
                                         });
                                 },
                                 eventClick: function (calEvent, jsEvent, view) {
                                     var workoutShceduleId = calEvent.id;
                                     ScheduleWorkout(workoutShceduleId)

                                 },
                                 eventDrop: function (event) {
                                     var requestData = {};
                                     requestData.WorkoutScheduleId = parseInt(event.id);
                                     requestData.WorkoutId = parseInt(event.workoutId);
                                     requestData.ScheduledDate = new Date(event.start._d).toDateString();
                                     requestData.IsActiveString = event.isActive ? "on" : "";
                                     requestData.LocationId = $('#locations').val();
                                     SaveWorkoutSchedule(requestData);
                                 },
                                 editable: true
                             });
                         });
                         $('#locations').trigger('change');

                         $('.fc-agendaWeek-button').hide();
                         $('.fc-agendaDay-button').hide();
                     } else {
                         //$('#scheduleworkout a').css('pointer-events', 'none')
                         //$('#calendar').parent().hide();\
                         toastr.error("Please add active location first to schedule a workout.");

                         setTimeout(function () {
                             window.history.back();
                         }, 500)
                     }
                }
            });
        }
        $(document).ready(function () {

            GetClientLocations();
            $('.modal').on('hidden.bs.modal', function (e) {
                if ($('.modal').hasClass('in')) {
                    $('body').addClass('modal-open');
                }
            });

        });
        var SaveWorkoutSchedule = function (requestData) {
            if (requestData.BoxerWorkoutId <= 0 || isNaN(requestData.BoxerWorkoutId)) {
                toastr.error("Please create boxer workout first.");
                return false;
            }
             //   requestData.ScheduledDate = requestData.ScheduledDate.getUTCFullYear() + "/" + requestData.ScheduledDate.getUTCMonth() + "/" + requestData.ScheduledDate.getUTCDate();
            $.ajax({
                url: '@Url.Action("BoxerWorkoutSchedule", "Workout")',
                type: "post",
                dataType: "JSON",
                contentType: "application/json", // content type sent to server
                data: JSON.stringify(requestData),
                success: function (result) {
                    if (result.data == 0) {
                        $('.close').trigger('click');
                        toastr.success("Boxer Workout scheduled successfully.");
                        $('#locations').trigger('change');
                       // window.location.reload();
                    } else if (result.data == 1) {
                        toastr.error("Same Boxer Workout is already scheduled for this date.");
                        $('#locations').trigger('change');
                    } else {
                        toastr.error("Something went wrong. Please try again later.");
                    }
                }
            });

        }


        var SaveWorkoutBulkSchedule = function (requestData) {
            if (requestData.BoxerWorkoutId <= 0 || isNaN(requestData.BoxerWorkoutId)) {
                toastr.error("Please create boxer workout first.");
                return false;
            }
             //   requestData.ScheduledDate = requestData.ScheduledDate.getUTCFullYear() + "/" + requestData.ScheduledDate.getUTCMonth() + "/" + requestData.ScheduledDate.getUTCDate();
            $.ajax({
                url: '@Url.Action("BulkScheduleBoxerWorkout", "Workout")',
                type: "post",
                dataType: "JSON",
                contentType: "application/json", // content type sent to server
                data: JSON.stringify(requestData),
                success: function (result) {
                    if (result.data == 0) {
                        $('.close').trigger('click');
                        toastr.success("Boxer Workout scheduled successfully.");
                        $('#locations').trigger('change');
                    } else if (result.Message != "") {
                        toastr.error(result.Message);
                    } else {
                        toastr.error("Something went wrong. Please try again later.");
                    }
                }
            });

        }


        var DeleteWorkoutSchedule = function (requestData) {
            var result = confirm("Are you sure want to delete?");
            if (result) {
                $.ajax({
                url: '@Url.Action("ScheduleBoxerWorkout", "Workout")',
                type: "post",
                dataType: "JSON",
                contentType: "application/json", // content type sent to server
                data: JSON.stringify(requestData),
                success: function (result) {
                    if (result.IsSuccess) {
                        $('.close').trigger('click');
                        toastr.success("Boxer Workout scheduled successfully!");
                        $('#locations').trigger('change');
                        //window.location.reload();
                    } else {
                        toastr.error(result.Message);
                    }
                }
            });
            }


        }

        var ScheduleWorkout = function (workoutScheduleId) {
            var locationId = $('#locations').val();
            $.ajax({
                url: "@Url.Action("ScheduleBoxerWorkout", "Workout")",
                data: { WorkoutScheduleId: workoutScheduleId, LocationId:locationId},
                type: "get",
                dataType: "html",
                success: function (data) {
                    $('.workoutschedulearea').html(data);
                    $('#workoutscheduletable').modal();
                },
                error: function () {
                }
            });

        }

         var BulkScheduleWorkout = function (workoutScheduleId) {
            var locationId = $('#locations').val();
            $.ajax({
                url: "@Url.Action("BulkScheduleBoxerWorkout", "Workout")",
                data: { WorkoutScheduleId: workoutScheduleId, LocationId:locationId},
                type: "get",
                dataType: "html",
                success: function (data) {
                    $('.workoutbulkschedulearea').html(data);
                    $('#workoutbulkscheduletable').modal();
                },
                error: function () {
                }
            });

        }

        $('.user-icon-top').click(function () {
            $(this).toggleClass("open");
        })

    </script>

    @*@if (TempData["OperationType"] == "success")
        {
            <script type="text/javascript">
            toastr.success("@TempData["OperationMessage"].ToString()")
            </script>
        }
        @if (TempData["OperationType"] == "fail")
        {
            <script type="text/javascript">
                toastr.error("@TempData["OperationMessage"].ToString()")
            </script>
        }*@
}




