@using Newtonsoft.Json;
@using Models;
@using System.Web.Optimization;
@model ModelTemplate

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Index";
}


<div class="container">
    <div class="row">
        <div class="col-xs-12">
            <div class="page-title-box">
                <h4 class="page-title">Template</h4>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="card-box">
                @if (ViewBag.OperationType == "success")
                {
                    <div class="alert alert-success alert-dismissible fade in" role="alert">
                        <button class="close" aria-label="Close" type="button" data-dismiss="alert">
                            <span aria-hidden="true">×</span>
                        </button>
                        <strong>Success! </strong>@ViewBag.OperationMessage
                    </div>
                }
                @if (ViewBag.OperationType == "fail")
                {
                    <div class="alert alert-danger alert-dismissible fade in" role="alert">
                        <button class="close" aria-label="Close" type="button" data-dismiss="alert">
                            <span aria-hidden="true">×</span>
                        </button>
                        <strong>Fail! </strong>@ViewBag.OperationMessage
                    </div>
                }

                @using (@Html.BeginForm("Add", "Template", FormMethod.Post))
                {
                    @Html.HiddenFor(m => m.ID)
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label>Title <span class="required">*</span></label>
                            @Html.TextBoxFor(m => m.TemplateName, new { @class = "form-control", @placeholder = "Title", @required="required" })
                            <span style="color:red">@Html.ValidationMessageFor(m => m.TemplateName)</span>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.HiddenFor(m => m.NumberOfBasicVideos, new { @class = "form-control", @min = "1", @max = "6" })
                            @Html.HiddenFor(m => m.NumberOfAlterVideos, new { @class = "form-control", @min = "1", @max = "6" })
                            <label>Template Type (Column X Rows)</label>

                            <select class="form-control" id="templateType">
                                <option value="1.1">Single</option>
                                <option selected value="2.1">2 X 1</option>
                                <option selected value="2.2">2 X 2</option>
                                <option value="3.1">3 X 1</option>
                                <option value="3.3">3 X 2</option>
                                <option value="4.1">4 X 1</option>
                                <option value="4.4">4 X 2</option>
                                <option value="5.1">5 X 1</option>
                                <option value="5.5">5 X 2</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <label>Primary Text</label>
                            @Html.TextBoxFor(m => m.PrimaryText, new { @class = "form-control", @maxlength = "10" })
                        </div>
                        <div class="col-md-6">
                            <label>Alternate Text</label>
                            @Html.TextBoxFor(m => m.AlternateText, new { @class = "form-control", @maxlength = "10" })
                        </div>
                      
                    </div>

                    @*<div class="col-sm-6">
                        <div class="form-group">
                            <label>Number of basic videos</label>
                            @Html.HiddenFor(m => m.NumberOfBasicVideos, new { @class = "form-control", @min = "1", @max = "6" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Number of Alter videos</label>
                            @Html.HiddenFor(m => m.NumberOfAlterVideos, new { @class = "form-control", @min = "1", @max = "6" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        <label>Description</label>
                        <textarea id="elm1" name="TemplateDescription"></textarea>
                    </div>
                    <button type="submit" class="btn btn-purple waves-effect waves-light">Submit</button>

                }
            </div>
        </div>
    </div>
</div>
<script src="~/Content/plugins/tinymce/tinymce.min.js"></script>
<script type="text/javascript">
    //$(document).ready(function () {
    //    $('#multiple-checkboxes').multiselect();
    //});
</script>
@section beforeappjs
{
    <script type="text/javascript">
        $(document).ready(function () {
            //Editor
            var templateType = $('#NumberOfBasicVideos').val() + '.' + $('#NumberOfAlterVideos').val();
            if (templateType != null && templateType != undefined && templateType != "0.0") {
                $('#templateType').val(templateType);
            } else {
                $('#NumberOfBasicVideos').val(2);
                $('#NumberOfAlterVideos').val(2);
            }
            $('#templateType').change(function () {
                var tempType = $(this).val();
                $('#NumberOfBasicVideos').val(tempType.substring(0,1));
                $('#NumberOfAlterVideos').val(tempType.substring(2));
            });
            if ($("#elm1").length > 0) {
                tinymce.init({
                    selector: "textarea#elm1",
                    theme: "modern",
                    height: 300,
                    plugins: [
                        "advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker",
                        "searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking",
                        "save table contextmenu directionality emoticons template paste textcolor"
                    ],
                    toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview media fullpage | forecolor backcolor emoticons",
                    style_formats: [
                        { title: 'Bold text', inline: 'b' },
                        { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } },
                        { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } },
                        { title: 'Example 1', inline: 'span', classes: 'example1' },
                        { title: 'Example 2', inline: 'span', classes: 'example2' },
                        { title: 'Table styles' },
                        { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }
                    ]
                });
                var tinyMCEContent =@Html.Raw(JsonConvert.SerializeObject(this.Model.TemplateDescription));
                $('#elm1').html(tinyMCEContent);
            }

        });
    </script>

}
@section footerscript
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.10/jquery.validate.unobtrusive.js"></script>
}




