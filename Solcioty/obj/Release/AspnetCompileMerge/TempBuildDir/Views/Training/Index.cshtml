@using System.Web.Optimization;
@using Models;
@using Services;
@model List<ModelTrainingPortal>
@{
    ViewBag.Title = "Training Portals";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int Rows = 0;
}

@section beforeappcss{
    <!-- DataTables css -->
    @Styles.Render("~/bundle/responsivedatatablecss")
}
@{
    var userData = Session["UserData"] as UserData;
    var permissionType = AccessbilityService.GetPermission(userData.RoleCode, Permission.TrainingPortal);
}
<div class="container">
    <div class="row">
        <div class="col-xs-12">
            <div class="page-title-box">
                <h4 class="page-title">Training Portals</h4>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>

    <div class="row">

        <div class="col-sm-12">

            <div class="card-box table-responsive">
                @if (permissionType == Models.Enums.PermissionType.ReadWrite)
                {
                    if (Model != null && Model.Count == 0)
                    {
                        <a href="~/training/Add" class="btn btn-purple waves-effect waves-light pull-right m-0">Add New</a>
                    }

                }
                <table id="datatable-buttons" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Name</th>
                            <th>Description</th>
                            @if (permissionType == Models.Enums.PermissionType.ReadWrite)
                            {
                                <th width="30%">Action</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            {
                                Rows++;
                                <tr>
                                    <td>@Rows</td>
                                    <td>@item.Name</td>
                                    <td>
                                        @item.Description
                                    </td>
                                    @if (permissionType == Models.Enums.PermissionType.ReadWrite)
                                    {
                                        <td>
                                            <a href="@Url.Action("Edit","training",new { Id =item.Id })" class="btn waves-effect waves-light editicon">Edit</a>

                                            <a href="@Url.Action("Categories","training",new { Id =item.Id })" class="btn waves-effect waves-light editicon">Categories</a>
                                            <a href="@Url.Action("PortalUsers","training",new { Id =item.Id })" class="btn waves-effect waves-light editicon">Users</a>
                                            <a class="btn waves-effect waves-light deleteicon" onclick="deleteRow(this,@item.Id);">Delete</a>
                                        </td>
                                    }

                                </tr>
                            }
                        }

                    </tbody>

                </table>
            </div>
        </div>
    </div>
</div>
@section beforeappjs
{
    @Scripts.Render("~/bundle/responsivedatatablejs");
}
@section footerscript
{

    <script type="text/javascript">

        $(document).ready(function () {
            $(".dt-buttons").css("display", "none");

        });
        TableManageButtons.init();

        function deleteRow(r, id) {
            var result = confirm("Are you sure want to delete?");
            if (result) {
               $.ajax({
                type: "GET",
                url: "/training/Delete", // Location of the service
                data: { Id: id }, //Data sent to server
                contentType: "application/json", // content type sent to server
                success: function (data) {
                    if (data.data == true) {
                        var i = r.parentNode.parentNode.rowIndex;
                        document.getElementById("datatable-buttons").deleteRow(i);
                       // toastr.success("client deleted successfully!");
                        window.location.reload();
                    } else {
                          if (data.IsAuthorized != null && data.IsAuthorized == false) {
                            window.location.href = "@Url.Action("Unauthorized", "Account")"
                          }
                            //toastr.error("something went wrong!");
                    }
                }
            });
        }

    }

    </script>

    @if (TempData["OperationType"] == "success")
    {
        <script type="text/javascript">
        toastr.success("@TempData["OperationMessage"].ToString()")
        </script>
    }
    @if (TempData["OperationType"] == "fail")
    {
        <script type="text/javascript">
            toastr.error("@TempData["OperationMessage"].ToString()")
        </script>
    }
}






