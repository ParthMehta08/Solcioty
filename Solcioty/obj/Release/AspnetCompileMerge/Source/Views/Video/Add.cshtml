@using Newtonsoft.Json;
@using Models;
@using System.Web.Optimization;
@model ModelVideo

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Index";
    string isChecked = "";
}
@section beforeappcss{
    <!-- DataTables css -->
    @Styles.Render("~/bundle/bootstrapcss")
    @Styles.Render("~/bundle/jqueryfiler")
}

<div class="container">
    <div class="row">
        <div class="col-xs-12">
            <div class="page-title-box">
                <h4 class="page-title">Video</h4>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="card-box">


                @using (@Html.BeginForm("Add", "Video", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                {
                    @Html.HiddenFor(m => m.ID)
                    <div class="row">
                        <div class="col-md-6">
                            <label>Title <span class="required">*</span></label>
                            @Html.TextBoxFor(m => m.VideoName, new { @class = "form-control", @placeholder = "Name", @required = "required" })
                            <span style="color:red">@Html.ValidationMessageFor(m => m.VideoName)</span>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Tags</label>
                                @*<select multiple data-role="tagsinput" name="VideoTagsMappingsNames" id="VideoTagsMappingsNames"></select>*@
                                @*<input type="text" name="VideoTagsMappingsNames" id="VideoTagsMappingsNames" />*@
                                @Html.EditorFor(model => model.VideoTagsMappingsNames, new { htmlAttributes = new { @class = "form-control" } })
                                @*@Html.DropDownListFor(m => m.VideoTagsMappingsNames, new SelectList(Model.tagsDictionary, "Key", "Value"), new { @id = "VideoTagsMappingsNames", @multiple = "multiple" })
                                    @Html.TextBoxFor(m => m.VideoTagsMappings, new { @id = "VideoTagsMappings", @style = "display:none;" })*@
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="checkbox checkbox-primary">
                                @{
                                    isChecked = Model.IsActive ? "checked" : "";
                                }
                                <input type="checkbox" name="IsActiveString" @isChecked>
                                <label class="activechk">Active</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div  class="col-md-6">
                            <label>Note</label>
                            @Html.TextBoxFor(m => m.SmallDescription, new { @class = "form-control", @placeholder = "Note" })
                        </div>
                        @*<div  class="col-md-6">
                            <label>Repeat Count</label>
                            @Html.TextBoxFor(m => m.RepsCount, new { @class = "form-control numericOnly", @placeholder = "Repeat Count" })
                        </div>*@
                    </div>
                    
                    <div class="form-group m-t-10">
                        <label>Full Description</label>
                        <textarea id="elm1" name="FullDescription"></textarea>
                    </div>
                    <input type="file" name="Videoclip" accept="video/mov" id="Videoclip" />

                    if (Model.ID > 0)
                    {
                        <div align="center" id="existvideo" class="embed-responsive embed-responsive-16by9 videothumbnail p-b-0">
                            <video autoplay loop muted class="embed-responsive-item">
                                <source src="@Url.Action("ShowVideo", "Video", new { ID = Model.ID})">
                            </video>
                        </div>
                    }
                    <div class="row" id="preview">
                        <video autoplay id="myvideo" class="videothumbnail"></video>
                    </div>

                    <button type="submit" class="btn btn-purple waves-effect waves-light m-t-10" onclick="javascript: setTagsAndWorkout();">Submit</button>
                }
            </div>
        </div>
    </div>
</div>
<script src="~/Content/plugins/tinymce/tinymce.min.js"></script>
<script type="text/javascript">
    //$(document).ready(function () {
    //    $('#multiple-checkboxes').multiselect();
    //});
</script>
@section beforeappjs
{

    @*@Scripts.Render("~/bundle/bootstrapjs");*@
    @Scripts.Render("~/bundle/jqueryfiler");
    <script src="~/Content/assets/js/typeahead.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".numericOnly").keypress(function (e) {
                if (e.keyCode == 9) {
                    return true;
                } 
                //if (String.fromCharCode(e.keyCode).match(/[^0-9]/g)) return false;
                var regex = new RegExp("^[0-9\b]+$");
                var charString = String.fromCharCode(!e.charCode ? e.which : e.charCode);
                if (regex.test(charString)) {
                    return true;
                }
                else {
                    e.preventDefault();
                    return false;
                }
            });
            var tagnames = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: {
                    url: '@Url.Action("getalltags","tag")',
                    filter: function (list) {
                        return $.map(list.data, function (tagname) {
                            return { name: tagname };
                        });
                    }
                }
            });
            tagnames.clearPrefetchCache();
            tagnames.initialize(true);

            $('#VideoTagsMappingsNames').tagsinput({
                typeaheadjs: {
                    name: 'tagnames',
                    displayKey: 'name',
                    valueKey: 'name',
                    source: tagnames.ttAdapter()
                }
            });

        });
        //get tags and workout types
        function setTagsAndWorkout() {
            var selected = $("#VideoTagsMappingsNames option:selected");
            var message = "";
            selected.each(function () {
                message += $(this).val() + ",";
            });
            $('#VideoTagsMappings').val(message);

        }
    </script>


    <script type="text/javascript">
        $(document).ready(function () {
            //Editor
            $('#preview').hide();
            if ($("#elm1").length > 0) {
                tinymce.init({
                    selector: "textarea#elm1",
                    theme: "modern",
                    height: 300,
                    plugins: [
                        "advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker",
                        "searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking",
                        "save table contextmenu directionality emoticons template paste textcolor"
                    ],
                    toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview media fullpage | forecolor backcolor emoticons",
                    style_formats: [
                        { title: 'Bold text', inline: 'b' },
                        { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } },
                        { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } },
                        { title: 'Example 1', inline: 'span', classes: 'example1' },
                        { title: 'Example 2', inline: 'span', classes: 'example2' },
                        { title: 'Table styles' },
                        { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }
                    ]
                });
                var tinyMCEContent =@Html.Raw(JsonConvert.SerializeObject(this.Model.FullDescription));
                $('#elm1').html(tinyMCEContent);
            }


            $('#Videoclip').filer({
                limit: 1,
                maxSize: null,
                extensions: null,
                changeInput: '<div class="jFiler-input-dragDrop">'+
                        '<div class="jFiler-input-inner">'+

                            '<div class="jFiler-input-icon">'+
                                '<i class="icon-jfi-cloud-up-o "></i>'+
                            '</div>'+

                            '<div class="fa fa-upload display-block">'+
                                '<h3>Drag & Drop files here</h3>'+
                                '<span style="display:inline-block;margin: 15px 0">or</span>'+
                        '</div>'+

                        '<a class="jFiler-input-choose-btn blue">Browse Files</a> </div </div>',
                showThumbs: false,
                appendTo: null,
                theme: "default",
                dragDrop: {
                    dragEnter: function () {
                    },
                    dragLeave: null,
                    drop: function (file) {
                        var videoFile = file[0];
                        if (videoFile != undefined && videoFile.type == "video/mp4") {
                            $('#existvideo').hide();
                            $('#preview').hide();
                            var fileURL = URL.createObjectURL(videoFile)
                            $('#myvideo').attr('src', fileURL);
                            $('#Videoclip')[0].files = file;
                            $('#preview').show();
                        } else {
                            toastr.error("Only MP4 video allowed!")
                        }
                    },
                },
                addMore: false,
                clipBoardPaste: true,
                excludeName: null,
                beforeShow: function () { return true },
                onSelect: function () { },
                afterShow: function () { },
                onRemove: function () { },
                onEmpty: function () { },
                captions: {
                    button: "Choose Files",
                    feedback: "Choose files To Upload",
                    feedback2: "files were chosen",
                    drop: "Drop file here to Upload",
                    removeConfirmation: "Are you sure you want to remove this file?",
                    errors: {
                        filesLimit: "Only {{fi-limit}} files are allowed to be uploaded.",
                        filesType: "Only Images are allowed to be uploaded.",
                        filesSize: "{{fi-name}} is too large! Please upload file up to {{fi-maxSize}} MB.",
                        filesSizeAll: "Files you've choosed are too large! Please upload files up to {{fi-maxSize}} MB."
                    }
                }
            });

            $('#Videoclip').change(function () {
                var videoFile = $(this)[0].files[0];
                if (videoFile != undefined && videoFile.type == "video/mp4") {
                    $('#existvideo').hide();
                    $('#preview').hide();
                    var fileURL = URL.createObjectURL(videoFile)
                    $('#myvideo').attr('src', fileURL);
                    $('#preview').show();
                } else {
                    toastr.error("Only MP4 video allowed!")
                }
            });

        });
    </script>

}
@section footerscript
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.10/jquery.validate.unobtrusive.js"></script>
}




